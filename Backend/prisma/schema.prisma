// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  domain    String    @unique
  createdAt DateTime  @default(now())

  users     User[]
  projects  Project[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      String    // e.g., "Admin", "Member"
  tenantId  Int
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  createdAt DateTime  @default(now())

  userOnProjects UserOnProject[] // Connects User to projects via join table
}



model Project {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  status      String    // e.g., "Active", "Completed"
  deadline    DateTime
  tenantId    Int
  tenant      Tenant    @relation(fields: [tenantId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userOnProjects UserOnProject[] // Connects Project to users via join table
}

model UserOnProject {
  id        Int      @id @default(autoincrement())
  userId    Int
  projectId Int
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId]) // Ensures a user is added only once to a project
}